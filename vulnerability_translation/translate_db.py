import sqlite3
from translate import Translator

# Path to your SQLite database
db_path = "vulnerability_management.db"

# Connect to the database
conn = sqlite3.connect(db_path)
cursor = conn.cursor()

# Define translators for Chinese and Japanese to English
translators = {
    "zh": Translator(from_lang="zh", to_lang="en"),  # Chinese
    "ja": Translator(from_lang="ja", to_lang="en"),  # Japanese
}

# Fetch rows from the Vulnerabilities table
cursor.execute("SELECT id, description, language_code FROM Vulnerabilities")
rows = cursor.fetchall()

# Translate each row based on its language code
for row in rows:
    vuln_id, description, language_code = row

    # Skip rows with NULL or empty descriptions
    if not description or not language_code:
        continue

    # Select the appropriate translator
    translator = translators.get(language_code)

    # If no translator is available for the given language, skip
    if not translator:
        print(f"Skipping ID {vuln_id}: Unsupported language code '{language_code}'")
        continue

    # Translate the description to English
    description_english = translator.translate(description)

    # Print translation for reference
    print(f"Original ({language_code}): {description}")
    print(f"Translated (English): {description_english}")

    # Update the row in the database
    cursor.execute(
        "UPDATE Vulnerabilities SET description = ? WHERE id = ?",
        (description_english, vuln_id)
    )

# Commit changes and close the connection
conn.commit()
conn.close()

print("Translation completed and database updated!")
